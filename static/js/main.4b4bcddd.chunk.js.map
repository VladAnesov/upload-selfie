{"version":3,"sources":["App.js","index.js"],"names":["App","props","apiRequest","method","params","options","showSpinner","setState","popout","then","data","catch","connectListener","e","detail","type","scheme","appearance","app","start_time","newState","schemeAttribute","document","createAttribute","value","body","attributes","setNamedItem","state","startTime","parseInt","setAppViewSettings","version","clientVersion","sendBridgeRequest","status","text","goBack","history","pop","activePanel","length","goForward","push","file","imagePreviewUrl","vkBridge","subscribe","this","send","status_bar_style","request","console","log","r","preventDefault","reader","FileReader","target","files","onloadend","result","images","readAsDataURL","$imagePreview","alt","src","className","isWebView","onSwipeBack","header","id","separator","onSubmit","_handleSubmit","onChange","_handleImageChange","accept","capture","onClick","htmlFor","expandable","before","left","deleteSelfie","vertical","wide","size","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4b4bcddd.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {\n  View,\n  Panel,\n  ScreenSpinner,\n  ConfigProvider,\n  Cell,\n  PanelHeaderBack,\n  FixedLayout,\n  Separator,\n  PanelHeaderSimple,\n  Group,\n  Button\n} from '@vkontakte/vkui';\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport Icon24Upload from '@vkontakte/icons/dist/24/upload';\n\nimport vkBridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activePanel: 'main',\n      history: ['main'],\n      file: '',\n      imagePreviewUrl: ''\n    };\n  }\n\n  apiRequest = (method, params, options = {showSpinner: true}) => {\n    if (options.showSpinner) {\n      this.setState({popout: <ScreenSpinner/>});\n    }\n    return this.props.apiRequest(method, params, options).then((data) => {\n      if (options.showSpinner) {\n        this.setState({popout: null});\n      }\n      return data;\n    }).catch(() => {\n      if (options.showSpinner) {\n        this.setState({popout: null});\n      }\n    });\n  };\n\n  componentDidMount() {\n    vkBridge.subscribe(this.connectListener);\n    this.sendBridgeRequest(\"VKWebAppInit\");\n    this.sendBridgeRequest(\"VKWebAppGetClientVersion\");\n  }\n\n  connectListener = (e) => {\n    const {type, data} = e.detail;\n    switch (type) {\n      case 'VKWebAppUpdateConfig':\n        const {scheme, appearance, app, start_time} = data;\n        const newState = {scheme, app};\n\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = scheme ? scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n\n        if (start_time && this.state.startTime === null) {\n          newState.startTime = parseInt(start_time);\n        }\n\n        this.setAppViewSettings(appearance);\n        break;\n\n      case 'VKWebAppGetClientVersionResult':\n        const {version} = data;\n        this.setState({clientVersion: version});\n        break;\n\n\n      case 'VKWebAppAccessTokenFailed':\n        this.sendBridgeRequest('VKWebAppClose', {status: 'error', text: 'Доступ запрещен'});\n        break;\n\n      default:\n    }\n  };\n\n  setAppViewSettings(appearance) {\n    vkBridge.send('VKWebAppSetViewSettings', {\n      status_bar_style: appearance === 'light' ? 'dark' : 'light',\n    });\n  }\n\n  goBack = () => {\n    const history = [...this.state.history];\n    history.pop();\n    const activePanel = history[history.length - 1];\n    if (activePanel === 'main') {\n      this.sendBridgeRequest('VKWebAppDisableSwipeBack');\n    }\n    this.setState({history, activePanel});\n  };\n\n  goForward = (activePanel) => {\n    const history = [...this.state.history];\n    history.push(activePanel);\n    if (this.state.activePanel === 'main') {\n      this.sendBridgeRequest('VKWebAppEnableSwipeBack');\n    }\n    this.setState({history, activePanel});\n  };\n\n  closeApp() {\n    this.sendBridgeRequest('VKWebAppClose');\n  }\n\n  sendBridgeRequest(request, data) {\n    console.log(\"[VK Bridge] Send: \" + request);\n    vkBridge.send(request, data).then(r => {\n      console.log(\"[VK Bridge] response \" + request);\n      console.log(r)\n    });\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault();\n    // TODO: do something with -> this.state.file\n    console.log('handle uploading-', this.state.file);\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n\n      this.setState({images: [this.state.file, this.state.imagePreviewUrl]})\n    };\n\n    reader.readAsDataURL(file);\n\n    this.goForward('selfiePreview');\n  }\n\n  deleteSelfie() {\n    this.goBack();\n    this.setState({\n      file: null,\n      imagePreviewUrl: null\n    });\n\n    this.setState({images: [this.state.file, this.state.imagePreviewUrl]})\n  }\n\n  render() {\n    let imagePreviewUrl = this.state.imagePreviewUrl;\n    let $imagePreview = null;\n    if (imagePreviewUrl) {\n      $imagePreview = (<img alt=\"Selfie preview\" src={imagePreviewUrl}/>);\n    } else {\n      $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n    }\n\n    return (\n      <ConfigProvider isWebView={true}>\n        <View\n          onSwipeBack={this.goBack}\n          history={this.state.history}\n          activePanel={this.state.activePanel}\n          header={false}\n        >\n          <Panel id=\"main\" separator={false}>\n            <PanelHeaderSimple>\n              Shvets-Score\n            </PanelHeaderSimple>\n            <Group>\n              <form onSubmit={(e) => this._handleSubmit(e)}>\n                <input className=\"fileInput\"\n                       type=\"file\"\n                       id=\"selfieInput\"\n                       onChange={(e) => this._handleImageChange(e)}\n                       accept=\"image/*\" capture />\n\n                <button className=\"submitButton\"\n                        type=\"submit\"\n                        id=\"selfieSubmit\"\n                        onClick={(e) => this._handleSubmit(e)}/>\n\n                <label htmlFor=\"selfieInput\">\n                  <Cell expandable before={<Icon24Camera/>}>\n                    Сделать селфи\n                  </Cell>\n                </label>\n              </form>\n\n            </Group>\n          </Panel>\n          <Panel id=\"selfiePreview\" separator={false}>\n            <PanelHeaderSimple separator={false} left={<PanelHeaderBack onClick={() => this.deleteSelfie()}/>}>\n              Shvets-Preview\n            </PanelHeaderSimple>\n\n            <div className=\"imgPreview\">\n              {$imagePreview}\n            </div>\n\n            <FixedLayout vertical=\"bottom\">\n              <Separator wide />\n              <label htmlFor=\"selfieSubmit\">\n                <div className=\"upload_btn\">\n                  <Button size=\"xl\" before={<Icon24Upload/>}>\n                    Загрузить селфи\n                  </Button>\n                </div>\n              </label>\n            </FixedLayout>\n          </Panel>\n          <Panel id=\"education\" separator={false}/>\n        </View>\n      </ConfigProvider>\n    );\n  }\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@vkontakte/vkui/dist/vkui.css';\n// import registerServiceWorker from './sw';\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}